---
name: "Build artifacts"

on:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'

    - name: Install poetry
      run: pipx install poetry==1.8.3

    - name: Install dependencies from cache
      id: poetry-cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: poetry-ci-dependencies-${{ hashFiles('**/poetry.lock') }}

    - name: Install
      run: poetry install --no-interaction --no-root
      if: steps.poetry-cache.outputs.cache-hit != 'true'

    - name: Build
      id: build
      run: make build

    - name: Upload packages
      if: steps.build.conclusion == 'success'
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: packages
        path: dist/

  PublishToTestPyPi:
    name: Publish distribution ðŸ“¦ to TestPyPI
    runs-on: ubuntu-latest
    needs: Build
    permissions:
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pytomation
    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist/

    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1.10
      with:
        repository-url: https://test.pypi.org/legacy/
